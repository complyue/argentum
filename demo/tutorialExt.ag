using sys { Object; }
using string;
using array;

class sys_Array {
    append(()@Object provider) ?Object {
        push(1, (i){ provider() });
        this[itemsCount - 1]
    }
}

class sys_WeakArray{
    size() int { sys_getSize(this) }
    resize(int n) this { sys_insertItems(this, 0, n) }
    append(?Object item) ?Object {
        n = size();
        sys_insertItems(this, n, 1);
        setAt(n, item)
    }
    setAt(int n, ?Object item) ?Object {
        item ? sys_setAtWeakArray(this, n, &_);
        item
    }
}

fn existsInRange(int from, int to, (int)bool predicate) bool {
    loop !(
        from < to && !predicate(from) ? from += 1
    );
    from != to
}
